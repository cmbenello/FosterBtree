[package]
name = "fbtree"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[features]
default = [
    "sec_bench_no_hint",
    "sec_bench_page_hint",
    "sec_bench_page_frame_hint",
    "sec_bench_page_slot_hint",
    "sec_bench_page_frame_slot_hint",
]
log_trace = []
log_debug = []
log_info = []
log_warn = []
log_error = []
stat = []

# Page sizes. If page sizes are larger than 256k, pages will be heap allocated to avoid stack overflow.
# Default is 16KB (defined in page.rs)
4k_page = []
8k_page = []
16k_page = []
32k_page = []
64k_page = []
128k_page = []
256k_page = ["heap_allocated_page"]
512k_page = ["heap_allocated_page"]
1m_page = ["heap_allocated_page"]
heap_allocated_page = []

# Secondary index benchmarks
sec_bench_no_hint = []
sec_bench_page_hint = []
sec_bench_page_frame_hint = []
sec_bench_page_slot_hint = []
sec_bench_page_frame_slot_hint = []

# Hints
no_tree_hint = []
no_bp_hint = []

# Old iterator for foster btree
old_iter = []
# Async IO only for write
async_write = ["io-uring", "libc"]
# Async IO with prefetching
new_async_write = ["io-uring", "libc"]

[dependencies]
tempfile = "3.8"
rand = "0.8"
getrandom = { version = "0.2", features = ["js"] }
serde = { version = "1.0", features = ["derive"] }
chrono = "0.4"
lazy_static = { version = "1.4" }
clap = {version = "4.5", features = ["derive"]}
concurrent-queue = "2.5"
io-uring = {version = "0.7", optional = true}
libc = {version = "0.2", optional = true}
zipf = "7.0.1"
memchr = "2.7.4"
dashmap = "6.1"
criterion = { version = "0.5", features = ["html_reports"]}

[dev-dependencies]
serde_cbor = "0.11"
rstest = "0.23"

# For wasm (uncomment to use)
# [lib]
# crate-type = ["cdylib", "rlib"]
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"

[profile.release]
lto = true
panic = "abort"
codegen-units = 1
# debug = true # For perf

[[bench]]
name = "foster_btree_insert"
harness = false

[[bench]]
name = "hash_index_insert"
harness = false